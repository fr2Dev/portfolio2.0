!function(t,e,a,s){"use strict";t(function(){function s(){a.querySelector(".navbar__checkbox").checked=!1}var n=t(".scroll");n.click(function(e){e.preventDefault(),t("body,html").animate({scrollTop:t(this.hash).offset().top},1e3)}),t(e).scroll(function(){var e=t(this).scrollTop();n.each(function(){var a=t(this.hash).offset().top-20;a<=e&&(t(this).parent().addClass("active"),t(this).parent().siblings().removeClass("active"))})});var r=a.querySelector(".header"),c=new Headroom(r);c.init();var o=a.querySelector(".navbar");o.addEventListener("click",function(t){t.target.matches(".navbar__link")&&s()},!1);var i=t("#contact-form");i.submit(function(e){function a(e){t(e).toggleClass("visible")}e.preventDefault(),t(".contact__comment").empty();var s=i.serialize(),n=".contact__ajax-status--spinner",r=".contact__ajax-status--checkmark",c=".checkmark";t.ajax({type:"POST",url:t(this).attr("action"),data:s,dataType:"json"}).done(function(e){function s(t,e){var a=t.siblings(".contact__label").find(".contact__asterix");e?a.removeClass(l).addClass(o):a.removeClass(o).addClass(l)}var o="contact__asterix--success",l="contact__asterix--error",m=o+" "+l,u=t(".contact__asterix");if(a(n),e.isSuccess)i[0].reset(),u.removeClass(m),a(r),a(c),setTimeout(function(){a(r),a(c)},3e3);else{var f=t("#name"),h=t("#email"),v=t("#message"),_=".contact__comment";f.siblings(_).html(e.nameError),s(f,0===e.nameError.length),h.siblings(_).html(e.emailError),s(h,0===e.emailError.length),v.siblings(_).html(e.messageError),s(v,0===e.messageError.length)}}).fail(function(){console.log("error"),a(n)}).always(function(){a(n)})})})}(jQuery,window,document);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdHMuanMiXSwibmFtZXMiOlsiJCIsIndpbmRvdyIsImRvY3VtZW50IiwidW5kZWZpbmVkIiwidW5jaGVjayIsInF1ZXJ5U2VsZWN0b3IiLCJjaGVja2VkIiwic2Nyb2xsTGluayIsImNsaWNrIiwiZSIsInByZXZlbnREZWZhdWx0IiwiYW5pbWF0ZSIsInNjcm9sbFRvcCIsInRoaXMiLCJoYXNoIiwib2Zmc2V0IiwidG9wIiwic2Nyb2xsIiwic2Nyb2xsYmFyTG9jYXRpb24iLCJlYWNoIiwic2VjdGlvbk9mZnNldCIsInBhcmVudCIsImFkZENsYXNzIiwic2libGluZ3MiLCJyZW1vdmVDbGFzcyIsIm15RWxlbWVudCIsImhlYWRyb29tIiwiSGVhZHJvb20iLCJpbml0IiwibmF2YmFyIiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwidGFyZ2V0IiwibWF0Y2hlcyIsIiRjb250YWN0Rm9ybSIsInN1Ym1pdCIsInRvZ2dsZUFqYXhJY29uIiwiaWNvbiIsInRvZ2dsZUNsYXNzIiwiZW1wdHkiLCJwb3N0ZGF0YSIsInNlcmlhbGl6ZSIsInNwaW5uZXIiLCJjaGVja21hcmsiLCJjaGVja21hcmtQYXRoIiwiYWpheCIsInR5cGUiLCJ1cmwiLCJhdHRyIiwiZGF0YSIsImRhdGFUeXBlIiwiZG9uZSIsInJlc3VsdCIsInNldEFzdGVyaXhDb2xvciIsImlucHV0IiwiaXNTdWNjZXNzIiwiJGFzdGVyaXgiLCJmaW5kIiwiY2xhc3NFcnJvciIsImNsYXNzU3VjY2VzcyIsImFsbENsYXNzZXMiLCIkYXN0ZXJpeENsYXNzIiwicmVzZXQiLCJzZXRUaW1lb3V0IiwiJGlucHV0TmFtZSIsIiRpbnB1dEVtYWlsIiwiJGlucHV0TWVzc2FnZSIsImNsYXNzQ29tbWVudCIsImh0bWwiLCJuYW1lRXJyb3IiLCJsZW5ndGgiLCJlbWFpbEVycm9yIiwibWVzc2FnZUVycm9yIiwiZmFpbCIsImNvbnNvbGUiLCJsb2ciLCJhbHdheXMiLCJqUXVlcnkiXSwibWFwcGluZ3MiOiJDQUFBLFNBQVdBLEVBQUdDLEVBQVFDLEVBQVVDLEdBRTlCLFlBRUFILEdBQUUsV0FzQ0EsUUFBU0ksS0FDUEYsRUFBU0csY0FBYyxxQkFBcUJDLFNBQVUsRUFwQ3hELEdBQUlDLEdBQWFQLEVBQUUsVUFHbkJPLEdBQVdDLE1BQU0sU0FBU0MsR0FDeEJBLEVBQUVDLGlCQUNGVixFQUFFLGFBQWFXLFNBQ2JDLFVBQVdaLEVBQUVhLEtBQUtDLE1BQU1DLFNBQVNDLEtBQ2hDLE9BSUxoQixFQUFFQyxHQUFRZ0IsT0FBTyxXQUNmLEdBQUlDLEdBQW9CbEIsRUFBRWEsTUFBTUQsV0FFaENMLEdBQVdZLEtBQUssV0FDZCxHQUFJQyxHQUFnQnBCLEVBQUVhLEtBQUtDLE1BQU1DLFNBQVNDLElBQU0sRUFFM0NJLElBQWlCRixJQUNwQmxCLEVBQUVhLE1BQU1RLFNBQVNDLFNBQVMsVUFDMUJ0QixFQUFFYSxNQUFNUSxTQUFTRSxXQUFXQyxZQUFZLGNBUzlDLElBQUlDLEdBQVl2QixFQUFTRyxjQUFjLFdBRW5DcUIsRUFBWSxHQUFJQyxVQUFTRixFQUU3QkMsR0FBU0UsTUFPVCxJQUFJQyxHQUFTM0IsRUFBU0csY0FBYyxVQUVwQ3dCLEdBQU9DLGlCQUFpQixRQUFTLFNBQVVDLEdBRXJDQSxFQUFNQyxPQUFPQyxRQUFRLGtCQUN2QjdCLE1BRUQsRUFHSCxJQUFJOEIsR0FBZWxDLEVBQUUsZ0JBRXJCa0MsR0FBYUMsT0FBTyxTQUFTMUIsR0FVM0IsUUFBUzJCLEdBQWVDLEdBQ3RCckMsRUFBRXFDLEdBQU1DLFlBQVksV0FUdEI3QixFQUFFQyxpQkFDRlYsRUFBRSxxQkFBcUJ1QyxPQUN2QixJQUFJQyxHQUFVTixFQUFhTyxZQUN2QkMsRUFBVSxpQ0FDVkMsRUFBWSxtQ0FDWkMsRUFBZ0IsWUFPcEI1QyxHQUFFNkMsTUFDQUMsS0FBSyxPQUNMQyxJQUFNL0MsRUFBRWEsTUFBTW1DLEtBQUssVUFDbkJDLEtBQU1ULEVBQ05VLFNBQVMsU0FFVkMsS0FBSyxTQUFTQyxHQXdCWCxRQUFTQyxHQUFpQkMsRUFBT0MsR0FDL0IsR0FBSUMsR0FBV0YsRUFBTS9CLFNBQVMsbUJBQW1Ca0MsS0FBSyxvQkFDdERGLEdBQVlDLEVBQVNoQyxZQUFZa0MsR0FBWXBDLFNBQVNxQyxHQUFnQkgsRUFBU2hDLFlBQVltQyxHQUFjckMsU0FBU29DLEdBekJ0SCxHQUFJQyxHQUFlLDRCQUNmRCxFQUFhLDBCQUNiRSxFQUFhRCxFQUFlLElBQU1ELEVBQ2xDRyxFQUFnQjdELEVBQUUsb0JBSXRCLElBRkFvQyxFQUFlTSxHQUVYVSxFQUFPRyxVQUNUckIsRUFBYSxHQUFHNEIsUUFDaEJELEVBQWNyQyxZQUFZb0MsR0FDMUJ4QixFQUFlTyxHQUNmUCxFQUFlUSxHQUNmbUIsV0FBVyxXQUNUM0IsRUFBZU8sR0FDZlAsRUFBZVEsSUFDZCxTQUVBLENBQ0gsR0FBSW9CLEdBQWFoRSxFQUFFLFNBQ2ZpRSxFQUFjakUsRUFBRSxVQUNoQmtFLEVBQWdCbEUsRUFBRSxZQUNsQm1FLEVBQWUsbUJBT25CSCxHQUFXekMsU0FBUzRDLEdBQWNDLEtBQUtoQixFQUFPaUIsV0FDOUNoQixFQUFnQlcsRUFBeUMsSUFBNUJaLEVBQU9pQixVQUFVQyxRQUM5Q0wsRUFBWTFDLFNBQVM0QyxHQUFjQyxLQUFLaEIsRUFBT21CLFlBQy9DbEIsRUFBZ0JZLEVBQTJDLElBQTdCYixFQUFPbUIsV0FBV0QsUUFDaERKLEVBQWMzQyxTQUFTNEMsR0FBY0MsS0FBS2hCLEVBQU9vQixjQUNqRG5CLEVBQWdCYSxFQUErQyxJQUEvQmQsRUFBT29CLGFBQWFGLFdBR3ZERyxLQUFLLFdBQ0pDLFFBQVFDLElBQUksU0FDWnZDLEVBQWVNLEtBRWhCa0MsT0FBTyxXQUNOeEMsRUFBZU0sVUFRcEJtQyxPQUFRNUUsT0FBUUMiLCJmaWxlIjoic2NyaXB0cy5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gKCQsIHdpbmRvdywgZG9jdW1lbnQsIHVuZGVmaW5lZCkge1xuXG4gICd1c2Ugc3RyaWN0JztcblxuICAkKGZ1bmN0aW9uICgpIHtcblxuICAgIC8vIFNtb290aCBuYXYgbGlua3NcbiAgICB2YXIgc2Nyb2xsTGluayA9ICQoJy5zY3JvbGwnKTtcbiAgXG4gICAgLy8gU21vb3RoIHNjcm9sbGluZ1xuICAgIHNjcm9sbExpbmsuY2xpY2soZnVuY3Rpb24oZSkge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgJCgnYm9keSxodG1sJykuYW5pbWF0ZSh7XG4gICAgICAgIHNjcm9sbFRvcDogJCh0aGlzLmhhc2gpLm9mZnNldCgpLnRvcFxuICAgICAgfSwgMTAwMCApO1xuICAgIH0pO1xuICAgIFxuICAgIC8vIEFjdGl2ZSBsaW5rIHN3aXRjaGluZ1xuICAgICQod2luZG93KS5zY3JvbGwoZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgc2Nyb2xsYmFyTG9jYXRpb24gPSAkKHRoaXMpLnNjcm9sbFRvcCgpO1xuICAgICAgXG4gICAgICBzY3JvbGxMaW5rLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBzZWN0aW9uT2Zmc2V0ID0gJCh0aGlzLmhhc2gpLm9mZnNldCgpLnRvcCAtIDIwO1xuICAgICAgICBcbiAgICAgICAgaWYgKCBzZWN0aW9uT2Zmc2V0IDw9IHNjcm9sbGJhckxvY2F0aW9uICkge1xuICAgICAgICAgICQodGhpcykucGFyZW50KCkuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICAgICQodGhpcykucGFyZW50KCkuc2libGluZ3MoKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICBcbiAgICB9KVxuXG4gICAgLy8gU3RpY2t5IGhlYWRlciBvbiBzY3JvbGwgdG9wXG5cbiAgICAvLyBncmFiIGFuIGVsZW1lbnRcbiAgICB2YXIgbXlFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmhlYWRlcicpO1xuICAgIC8vIGNvbnN0cnVjdCBhbiBpbnN0YW5jZSBvZiBIZWFkcm9vbSwgcGFzc2luZyB0aGUgZWxlbWVudFxuICAgIHZhciBoZWFkcm9vbSAgPSBuZXcgSGVhZHJvb20obXlFbGVtZW50KTtcbiAgICAvLyBpbml0aWFsaXNlXG4gICAgaGVhZHJvb20uaW5pdCgpOyBcblxuICAgICAvLyB1bmNoZWNrIG5hdiBvbiBjbGlja1xuICAgIGZ1bmN0aW9uIHVuY2hlY2soKSB7XG4gICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubmF2YmFyX19jaGVja2JveCcpLmNoZWNrZWQgPSBmYWxzZTtcbiAgICB9XG4gICBcbiAgICB2YXIgbmF2YmFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm5hdmJhcicpO1xuXG4gICAgbmF2YmFyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGV2ZW50KSB7XG5cbiAgICAgIGlmIChldmVudC50YXJnZXQubWF0Y2hlcygnLm5hdmJhcl9fbGluaycpKSB7XG4gICAgICAgIHVuY2hlY2soKTtcbiAgICAgIH1cbiAgICB9LCBmYWxzZSk7XG5cbiAgICAvLyBDb250YWN0IGZvcm0gXG4gICAgdmFyICRjb250YWN0Rm9ybSA9ICQoJyNjb250YWN0LWZvcm0nKTtcblxuICAgICRjb250YWN0Rm9ybS5zdWJtaXQoZnVuY3Rpb24oZSl7XG5cbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICQoJy5jb250YWN0X19jb21tZW50JykuZW1wdHkoKTtcbiAgICAgIHZhciBwb3N0ZGF0YSA9JGNvbnRhY3RGb3JtLnNlcmlhbGl6ZSgpLFxuICAgICAgICAgIHNwaW5uZXIgPSAnLmNvbnRhY3RfX2FqYXgtc3RhdHVzLS1zcGlubmVyJyxcbiAgICAgICAgICBjaGVja21hcmsgPSAnLmNvbnRhY3RfX2FqYXgtc3RhdHVzLS1jaGVja21hcmsnLFxuICAgICAgICAgIGNoZWNrbWFya1BhdGggPSAnLmNoZWNrbWFyayc7XG5cblxuICAgICAgZnVuY3Rpb24gdG9nZ2xlQWpheEljb24oaWNvbikge1xuICAgICAgICAkKGljb24pLnRvZ2dsZUNsYXNzKCd2aXNpYmxlJyk7XG4gICAgICB9XG4gICAgXG4gICAgICAkLmFqYXgoe1xuICAgICAgICB0eXBlOidQT1NUJyxcbiAgICAgICAgdXJsOiAgJCh0aGlzKS5hdHRyKCdhY3Rpb24nKSxcbiAgICAgICAgZGF0YTogcG9zdGRhdGEsXG4gICAgICAgIGRhdGFUeXBlOidqc29uJ1xuICAgICAgfSlcbiAgICAgIC5kb25lKGZ1bmN0aW9uKHJlc3VsdCl7XG4gICAgICAgIHZhciBjbGFzc1N1Y2Nlc3MgPSAnY29udGFjdF9fYXN0ZXJpeC0tc3VjY2VzcycsXG4gICAgICAgICAgICBjbGFzc0Vycm9yID0gJ2NvbnRhY3RfX2FzdGVyaXgtLWVycm9yJyxcbiAgICAgICAgICAgIGFsbENsYXNzZXMgPSBjbGFzc1N1Y2Nlc3MgKyAnICcgKyBjbGFzc0Vycm9yICxcbiAgICAgICAgICAgICRhc3Rlcml4Q2xhc3MgPSAkKCcuY29udGFjdF9fYXN0ZXJpeCcpO1xuICAgICAgICBcbiAgICAgICAgdG9nZ2xlQWpheEljb24oc3Bpbm5lcik7XG5cbiAgICAgICAgaWYgKHJlc3VsdC5pc1N1Y2Nlc3MpIHtcbiAgICAgICAgICAkY29udGFjdEZvcm1bMF0ucmVzZXQoKTtcbiAgICAgICAgICAkYXN0ZXJpeENsYXNzLnJlbW92ZUNsYXNzKGFsbENsYXNzZXMpO1xuICAgICAgICAgIHRvZ2dsZUFqYXhJY29uKGNoZWNrbWFyayk7XG4gICAgICAgICAgdG9nZ2xlQWpheEljb24oY2hlY2ttYXJrUGF0aCk7XG4gICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHRvZ2dsZUFqYXhJY29uKGNoZWNrbWFyayk7XG4gICAgICAgICAgICB0b2dnbGVBamF4SWNvbihjaGVja21hcmtQYXRoKTtcbiAgICAgICAgICB9LCAzMDAwKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICB2YXIgJGlucHV0TmFtZSA9ICQoJyNuYW1lJyksXG4gICAgICAgICAgICAgICRpbnB1dEVtYWlsID0gJCgnI2VtYWlsJyksXG4gICAgICAgICAgICAgICRpbnB1dE1lc3NhZ2UgPSAkKCcjbWVzc2FnZScpLFxuICAgICAgICAgICAgICBjbGFzc0NvbW1lbnQgPSAnLmNvbnRhY3RfX2NvbW1lbnQnO1xuXG4gICAgICAgICAgZnVuY3Rpb24gc2V0QXN0ZXJpeENvbG9yIChpbnB1dCwgaXNTdWNjZXNzKSB7XG4gICAgICAgICAgICB2YXIgJGFzdGVyaXggPSBpbnB1dC5zaWJsaW5ncygnLmNvbnRhY3RfX2xhYmVsJykuZmluZCgnLmNvbnRhY3RfX2FzdGVyaXgnKTtcbiAgICAgICAgICAgIGlzU3VjY2VzcyA/ICRhc3Rlcml4LnJlbW92ZUNsYXNzKGNsYXNzRXJyb3IpLmFkZENsYXNzKGNsYXNzU3VjY2VzcykgOiAkYXN0ZXJpeC5yZW1vdmVDbGFzcyhjbGFzc1N1Y2Nlc3MpLmFkZENsYXNzKGNsYXNzRXJyb3IpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgICRpbnB1dE5hbWUuc2libGluZ3MoY2xhc3NDb21tZW50KS5odG1sKHJlc3VsdC5uYW1lRXJyb3IpO1xuICAgICAgICAgIHNldEFzdGVyaXhDb2xvcigkaW5wdXROYW1lLCAocmVzdWx0Lm5hbWVFcnJvci5sZW5ndGggPT09IDApKTtcbiAgICAgICAgICAkaW5wdXRFbWFpbC5zaWJsaW5ncyhjbGFzc0NvbW1lbnQpLmh0bWwocmVzdWx0LmVtYWlsRXJyb3IpO1xuICAgICAgICAgIHNldEFzdGVyaXhDb2xvcigkaW5wdXRFbWFpbCwgKHJlc3VsdC5lbWFpbEVycm9yLmxlbmd0aCA9PT0gMCkpO1xuICAgICAgICAgICRpbnB1dE1lc3NhZ2Uuc2libGluZ3MoY2xhc3NDb21tZW50KS5odG1sKHJlc3VsdC5tZXNzYWdlRXJyb3IpO1xuICAgICAgICAgIHNldEFzdGVyaXhDb2xvcigkaW5wdXRNZXNzYWdlLCAocmVzdWx0Lm1lc3NhZ2VFcnJvci5sZW5ndGggPT09IDApKTtcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICAgIC5mYWlsKGZ1bmN0aW9uKCkge1xuICAgICAgICBjb25zb2xlLmxvZygnZXJyb3InKTtcbiAgICAgICAgdG9nZ2xlQWpheEljb24oc3Bpbm5lcik7XG4gICAgICB9KVxuICAgICAgLmFsd2F5cyhmdW5jdGlvbigpIHtcbiAgICAgICAgdG9nZ2xlQWpheEljb24oc3Bpbm5lcik7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgICAvLyBFTkQgQ29udGFjdCBmb3JtXG5cbiAgICBcbiAgfSk7XG5cbn0pKGpRdWVyeSwgd2luZG93LCBkb2N1bWVudCk7XG4iXX0=
